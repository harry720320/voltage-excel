{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/webpack/bootstrap","webpack://office-addin-taskpane-js/webpack/runtime/define property getters","webpack://office-addin-taskpane-js/webpack/runtime/global","webpack://office-addin-taskpane-js/webpack/runtime/hasOwnProperty shorthand","webpack://office-addin-taskpane-js/webpack/runtime/publicPath","webpack://office-addin-taskpane-js/webpack/runtime/jsonp chunk loading","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.html"],"sourcesContent":["// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/^blob:/, \"\").replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t926: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global console, document, Excel, Office */\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Excel) {\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\n    document.getElementById(\"app-body\").style.display = \"flex\";\n    \n    // Bind encryption and decryption button event handlers\n    const encryptButton = document.getElementById(\"encrypt\");\n    const decryptButton = document.getElementById(\"decrypt\");\n    \n    if (encryptButton) {\n      encryptButton.onclick = encryptSelectedColumn;\n    }\n    \n    if (decryptButton) {\n      decryptButton.onclick = decryptSelectedColumn;\n    }\n    \n    // Set up password dialog event handlers\n    const dialog = document.getElementById(\"passwordDialog\");\n    const confirmButton = document.getElementById(\"confirmPassword\");\n    const cancelButton = document.getElementById(\"cancelPassword\");\n    \n    if (confirmButton) {\n      confirmButton.onclick = () => {\n        const password = document.getElementById(\"password\").value;\n        if (password) {\n          if (dialog.dataset.action === 'decrypt') {\n            processDecryption(password);\n          } else {\n            processEncryption(password);\n          }\n          dialog.close();\n        }\n      };\n    }\n    \n    if (cancelButton) {\n      cancelButton.onclick = () => {\n        dialog.close();\n      };\n    }\n  }\n});\n\nexport async function run() {\n  try {\n    await Excel.run(async (context) => {\n      /**\n       * Insert your Excel code here\n       */\n      const range = context.workbook.getSelectedRange();\n\n      // Read the range address\n      range.load(\"address\");\n\n      // Update the fill color\n      range.format.fill.color = \"yellow\";\n\n      await context.sync();\n      console.log(`The range address was ${range.address}.`);\n    });\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nasync function encryptSelectedColumn() {\n  try {\n    await Excel.run(async (context) => {\n      const range = context.workbook.getSelectedRange();\n      range.load([\"columnIndex\", \"values\"]);\n      await context.sync();\n      \n      // Check if only one column is selected\n      if (range.columnIndex === undefined) {\n        throw new Error(\"Please select a column\");\n      }\n      \n      // Show password input dialog\n      document.getElementById(\"passwordDialog\").showModal();\n    });\n  } catch (error) {\n    console.error(error);\n    // Display error message\n    Office.context.ui.displayDialogAsync(`Error: ${error.message}`);\n  }\n}\n\nasync function decryptSelectedColumn() {\n  try {\n    await Excel.run(async (context) => {\n      const range = context.workbook.getSelectedRange();\n      range.load([\"columnIndex\", \"values\"]);\n      await context.sync();\n      \n      // Check if only one column is selected\n      if (range.columnIndex === undefined) {\n        throw new Error(\"Please select a column\");\n      }\n      \n      // Get current worksheet\n      const sheet = context.workbook.worksheets.getActiveWorksheet();\n      \n      // Get the row count of used range\n      const usedRange = sheet.getUsedRange();\n      usedRange.load([\"rowCount\"]);\n      await context.sync();\n      \n      // Get entire column data\n      const columnIndex = range.columnIndex;\n      const wholeColumn = sheet.getRangeByIndexes(0, columnIndex, usedRange.rowCount, 1);\n      wholeColumn.load([\"values\", \"rowCount\"]);\n      \n      // Load header cell format\n      const headerCell = wholeColumn.getCell(0, 0);\n      headerCell.format.load(\"fill\");\n      await context.sync();\n\n      // Save header content\n      const headerText = wholeColumn.values[0][0];\n      console.log('Header content before decryption:', headerText);\n\n      // Check if encrypted (by checking header cell background color)\n      console.log('Header cell background color:', headerCell.format.fill.color);\n      const headerColor = headerCell.format.fill.color;\n      if (!headerColor || headerColor.toLowerCase() !== \"#c8e6c9\") {\n        console.log('This column is not encrypted');\n        await Office.context.ui.displayDialogAsync(\n          \"This column is not encrypted\",\n          {height: 30, width: 30}\n        );\n        return;\n      }\n\n      // Show password input dialog\n      const dialog = document.getElementById(\"passwordDialog\");\n      dialog.dataset.action = 'decrypt';  // Mark current operation as decrypt\n      dialog.showModal();\n    });\n  } catch (error) {\n    console.error(error);\n    Office.context.ui.displayDialogAsync(`Error: ${error.message}`);\n  }\n}\n\nasync function processEncryption(password) {\n  try {\n    await Excel.run(async (context) => {\n      // Get selected range\n      const range = context.workbook.getSelectedRange();\n      range.load([\"columnCount\", \"rowCount\", \"values\", \"columnIndex\"]);\n      await context.sync();\n\n      // Check if only one column is selected\n      if (range.columnCount !== 1) {\n        throw new Error(\"Please select only one column\");\n      }\n\n      console.log('Selected range data:', range.values);\n      console.log('Selected column index:', range.columnIndex);\n\n      // Get current worksheet\n      const sheet = context.workbook.worksheets.getActiveWorksheet();\n      \n      // Get row count of used range\n      const usedRange = sheet.getUsedRange();\n      usedRange.load([\"rowCount\", \"address\"]);\n      await context.sync();\n      \n      console.log('Used range row count:', usedRange.rowCount);\n      \n      // Get entire column data (from first row to last row of used range)\n      const columnIndex = range.columnIndex;  // Using 0-based index\n      const wholeColumn = sheet.getRangeByIndexes(0, columnIndex, usedRange.rowCount, 1);\n      wholeColumn.load([\"values\", \"rowCount\"]);\n      \n      // Load header cell\n      const headerCell = wholeColumn.getCell(0, 0);\n      headerCell.format.load(\"fill\");\n      await context.sync();\n\n      // Check if already encrypted (by checking header cell background color)\n      console.log('Header cell background color:', headerCell.format.fill.color);\n      if (headerCell.format.fill.color === \"#C8E6C9\") {\n        // Display dialog with message\n        await Office.context.ui.displayDialogAsync(\n          \"This column is already encrypted\",\n          {height: 30, width: 30}\n        );\n        return;\n      }\n\n      if (!wholeColumn.values || wholeColumn.values.length === 0) {\n        throw new Error(\"Unable to read column data\");\n      }\n\n      console.log('Entire column data:', wholeColumn.values);\n\n      // Extract all non-empty data except header\n      const dataToEncrypt = wholeColumn.values\n        .slice(1)  // Exclude header row\n        .map(row => row[0])  // Get first (and only) cell of each row\n        .filter(cell => cell !== \"\" && cell !== null && cell !== undefined);  // Filter empty values\n\n      if (dataToEncrypt.length === 0) {\n        throw new Error(\"No valid data to encrypt in selected column\");\n      }\n\n      console.log('Data to encrypt:', dataToEncrypt);\n\n      // Record original row numbers (for later updates)\n      const validDataRows = wholeColumn.values\n        .slice(1)  // Exclude header row\n        .map((row, index) => ({ \n          value: row[0], \n          rowIndex: index + 1  // +1 because we skipped header row\n        }))\n        .filter(item => item.value !== \"\" && item.value !== null && item.value !== undefined);\n\n      console.log('Valid data rows:', validDataRows);\n\n      // Base64 encode password\n      const base64Password = btoa(password);\n      console.log('Base64 encoded password:', base64Password);\n      \n      // Build auth header\n      const authHeader = `VSAuth vsauth_method=\"sharedSecret\",vsauth_data=\"${base64Password}\",vsauth_identity_ascii=\"demo@voltage.com\",vsauth_version=\"200\"`;\n      console.log('Complete auth header:', authHeader);\n      \n      // Prepare request data\n      const requestBody = {\n        format: \"AUTO\",\n        data: dataToEncrypt\n      };\n\n      console.log('=== API Request Start ===');\n      const apiUrl = 'https://voltage-pp-0000.dataprotection.voltage.com/vibesimple/rest/v1/protect';\n      console.log('Request URL:', apiUrl);\n      console.log('Request method:', 'POST');\n      console.log('Request headers:', {\n        'Content-Type': 'application/json',\n        'Authorization': authHeader\n      });\n      console.log('Request body:', JSON.stringify(requestBody, null, 2));\n      \n      const startTime = new Date();\n      \n      try {\n        // Add timeout setting\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 30000); // 30 seconds timeout\n\n        // Call encryption API\n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': authHeader\n          },\n          body: JSON.stringify(requestBody),\n          signal: controller.signal,\n          redirect: 'follow',\n          referrerPolicy: 'no-referrer'\n        });\n\n        clearTimeout(timeoutId);\n\n        const endTime = new Date();\n        const duration = endTime - startTime;\n\n        console.log('=== API Response Info ===');\n        console.log('Response status:', response.status, response.statusText);\n        console.log('Response headers:', Object.fromEntries([...response.headers]));\n        console.log('Request duration:', duration, 'ms');\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error('Error response body:', errorText);\n          throw new Error(`Encryption service request failed: ${response.status} ${response.statusText} - ${errorText}`);\n        }\n\n        const encryptedData = await response.json();\n        console.log('Response body:', JSON.stringify(encryptedData, null, 2));\n        \n        // Validate response data format\n        if (!encryptedData || !encryptedData.data || !Array.isArray(encryptedData.data)) {\n          throw new Error('Invalid server response format');\n        }\n\n        // Verify returned data length matches sent data length\n        if (encryptedData.data.length !== dataToEncrypt.length) {\n          throw new Error('Encrypted data length does not match original data');\n        }\n\n        console.log('=== API Request End ===');\n        \n        // Update Excel data (only update non-empty cells)\n        validDataRows.forEach((item, index) => {\n          const cell = wholeColumn.getCell(item.rowIndex, 0);\n          cell.values = [[encryptedData.data[index]]];\n          cell.format.fill.color = \"#E8F5E9\";  // Add background color for encrypted data\n        });\n        \n        // Set header cell style\n        const titleCell = wholeColumn.getCell(0, 0);\n        titleCell.format.fill.color = \"#C8E6C9\";  // Slightly darker green for header\n        \n        // Ensure worksheet protection is enabled\n        const worksheet = context.workbook.worksheets.getActiveWorksheet();\n        worksheet.protection.load(\"protected\");\n        await context.sync();\n        \n        // First remove worksheet protection (if exists)\n        if (worksheet.protection.protected) {\n            worksheet.protection.unprotect();\n            await context.sync();\n        }\n        \n        // Get entire used range\n        const entireRange = worksheet.getUsedRange();\n        entireRange.load(\"columnCount\");\n        await context.sync();\n        \n        // First unlock all cells\n        entireRange.format.protection.locked = false;\n        await context.sync();\n        \n        // Lock all cells in encrypted column\n        for (let i = 0; i < wholeColumn.rowCount; i++) {\n            const cell = wholeColumn.getCell(i, 0);\n            cell.format.protection.locked = true;\n        }\n        await context.sync();\n        \n        // Re-enable worksheet protection, but allow other operations\n        worksheet.protection.protect({\n            allowInsertRows: true,\n            allowInsertColumns: true,\n            allowDeleteRows: true,\n            allowDeleteColumns: true,\n            allowSort: true,\n            allowFilter: true,\n            allowEditObjects: true,\n            allowEditScenarios: true\n        });\n        await context.sync();\n        \n        // Add comment\n        const commentText = `🔒 Encryption time: ${new Date().toLocaleString()}\\nEncrypted data count: ${encryptedData.data.length}`;\n        titleCell.worksheet.comments.add(titleCell, commentText);\n      } catch (fetchError) {\n        console.error('=== Network Request Error ===');\n        console.error('Error type:', fetchError.name);\n        console.error('Error message:', fetchError.message);\n        \n        if (fetchError.name === 'AbortError') {\n          throw new Error('Request timeout, please check your network connection');\n        } else if (fetchError.message.includes('Failed to fetch')) {\n          throw new Error('Unable to connect to encryption server, please check:\\n1. Company network connection\\n2. VPN status');\n        } else {\n          throw fetchError;\n        }\n      }\n    });\n  } catch (error) {\n    console.error('=== API Error ===');\n    console.error('Error details:', error);\n    console.error('Error stack:', error.stack);\n    \n    // Provide friendly error message\n    let errorMessage = 'Error during encryption';\n    if (error.message.includes('Cannot read properties of null')) {\n      errorMessage = 'Invalid server response format';\n    } else if (error.message.includes('Failed to fetch')) {\n      errorMessage = error.message;\n    } else if (error.message.includes('timeout')) {\n      errorMessage = 'Request timeout, please check network connection';\n    } else {\n      errorMessage = `Encryption failed: ${error.message}`;\n    }\n    \n    Office.context.ui.displayDialogAsync(errorMessage);\n  }\n}\n\nasync function processDecryption(password) {\n  try {\n    await Excel.run(async (context) => {\n      // Get selected range\n      const range = context.workbook.getSelectedRange();\n      range.load([\"columnCount\", \"rowCount\", \"values\", \"columnIndex\"]);\n      await context.sync();\n\n      // Check if only one column is selected\n      if (range.columnCount !== 1) {\n        throw new Error(\"Please select only one column\");\n      }\n\n      // Get current worksheet\n      const sheet = context.workbook.worksheets.getActiveWorksheet();\n      \n      // Get row count of used range\n      const usedRange = sheet.getUsedRange();\n      usedRange.load([\"rowCount\"]);\n      await context.sync();\n      \n      // Get entire column data\n      const columnIndex = range.columnIndex;\n      const wholeColumn = sheet.getRangeByIndexes(0, columnIndex, usedRange.rowCount, 1);\n      wholeColumn.load([\"values\", \"rowCount\"]);\n      \n      // Load header cell format\n      const headerCell = wholeColumn.getCell(0, 0);\n      headerCell.format.load(\"fill\");\n      await context.sync();\n\n      // Save header content\n      const headerText = wholeColumn.values[0][0];\n      console.log('Header content before decryption:', headerText);\n\n      // Check if encrypted (by checking header cell background color)\n      console.log('Header cell background color:', headerCell.format.fill.color);\n      const headerColor = headerCell.format.fill.color;\n      if (!headerColor || headerColor.toLowerCase() !== \"#c8e6c9\") {\n        console.log('This column is not encrypted');\n        await Office.context.ui.displayDialogAsync(\n          \"This column is not encrypted\",\n          {height: 30, width: 30}\n        );\n        return;\n      }\n\n      // Extract all non-empty data except header\n      const dataToDecrypt = wholeColumn.values\n        .slice(1)  // Exclude header row\n        .map(row => row[0])  // Get first cell of each row\n        .filter(cell => cell !== \"\" && cell !== null && cell !== undefined);  // Filter empty values\n\n      if (dataToDecrypt.length === 0) {\n        throw new Error(\"No valid data to decrypt in selected column\");\n      }\n\n      // Record original row numbers\n      const validDataRows = wholeColumn.values\n        .slice(1)\n        .map((row, index) => ({ \n          value: row[0], \n          rowIndex: index + 1\n        }))\n        .filter(item => item.value !== \"\" && item.value !== null && item.value !== undefined);\n\n      // Base64 encode password\n      const base64Password = btoa(password);\n      \n      // Build auth header\n      const authHeader = `VSAuth vsauth_method=\"sharedSecret\",vsauth_data=\"${base64Password}\",vsauth_identity_ascii=\"demo@voltage.com\",vsauth_version=\"200\"`;\n      \n      // Prepare request data\n      const requestBody = {\n        format: \"AUTO\",\n        data: dataToDecrypt\n      };\n\n      console.log('=== Decryption API Request Start ===');\n      const apiUrl = 'https://voltage-pp-0000.dataprotection.voltage.com/vibesimple/rest/v1/access';\n      \n      try {\n        // Add timeout setting\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 30000);\n\n        // Call decryption API\n        const response = await fetch(apiUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': authHeader\n          },\n          body: JSON.stringify(requestBody),\n          signal: controller.signal\n        });\n\n        clearTimeout(timeoutId);\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          throw new Error(`Decryption service request failed: ${response.status} ${response.statusText} - ${errorText}`);\n        }\n\n        const decryptedData = await response.json();\n        \n        if (!decryptedData || !decryptedData.data || !Array.isArray(decryptedData.data)) {\n          throw new Error('Invalid server response format');\n        }\n\n        // First remove worksheet protection\n        const worksheet = context.workbook.worksheets.getActiveWorksheet();\n        worksheet.protection.load(\"protected\");\n        await context.sync();\n        \n        if (worksheet.protection.protected) {\n          worksheet.protection.unprotect();\n          await context.sync();\n        }\n\n        // Update Excel data\n        validDataRows.forEach((item, index) => {\n          const cell = wholeColumn.getCell(item.rowIndex, 0);\n          cell.values = [[decryptedData.data[index]]];\n          cell.format.fill.clear();  // Clear background color\n        });\n\n        // Clear header cell style and comments, but keep content\n        const titleCell = wholeColumn.getCell(0, 0);\n        titleCell.format.fill.clear();  // Clear background color\n        titleCell.clear(Excel.ClearApplyTo.comments);  // Clear comments\n        \n        // Rewrite header content\n        await context.sync();\n        titleCell.values = [[headerText]];\n        await context.sync();\n        \n        console.log('Header content after decryption:', headerText);\n\n        // Show success message\n        await Office.context.ui.displayDialogAsync(\n          \"Decryption completed!\",\n          {height: 30, width: 30}\n        );\n\n      } catch (fetchError) {\n        console.error('=== Network Request Error ===');\n        if (fetchError.name === 'AbortError') {\n          throw new Error('Request timeout, please check your network connection');\n        } else if (fetchError.message.includes('Failed to fetch')) {\n          throw new Error('Unable to connect to decryption server, please check:\\n1. Company network connection\\n2. VPN status');\n        } else {\n          throw fetchError;\n        }\n      }\n    });\n  } catch (error) {\n    console.error('=== Decryption Error ===');\n    console.error('Error details:', error);\n    \n    let errorMessage = 'Error during decryption';\n    if (error.message.includes('Cannot read properties of null')) {\n      errorMessage = 'Invalid server response format';\n    } else if (error.message.includes('Failed to fetch')) {\n      errorMessage = error.message;\n    } else if (error.message.includes('timeout')) {\n      errorMessage = 'Request timeout, please check network connection';\n    } else {\n      errorMessage = `Decryption failed: ${error.message}`;\n    }\n    \n    Office.context.ui.displayDialogAsync(errorMessage);\n  }\n}\n","// Imports\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"./taskpane.css\", import.meta.url);\nvar ___HTML_LOADER_IMPORT_1___ = new URL(\"../../assets/logo-filled.png\", import.meta.url);\n// Module\nvar code = \" <!DOCTYPE html> <html> <head> <meta charset=\\\"UTF-8\\\"/> <meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"IE=Edge\\\"/> <meta name=\\\"viewport\\\" content=\\\"width=device-width,initial-scale=1\\\"> <title>Contoso Task Pane Add-in</title> <\" + \"script src=\\\"https://appsforoffice.microsoft.com/lib/1/hosted/office.js\\\"><\" + \"/script> <link rel=\\\"stylesheet\\\" href=\\\"https://res-1.cdn.office.net/files/fabric-cdn-prod_20230815.002/office-ui-fabric-core/11.1.0/css/fabric.min.css\\\"/> <link href=\\\"\" + ___HTML_LOADER_IMPORT_0___ + \"\\\" rel=\\\"stylesheet\\\"/> </head> <body class=\\\"ms-font-m ms-welcome ms-Fabric\\\"> <header class=\\\"ms-welcome__header ms-bgColor-neutralLighter\\\"> <img width=\\\"90\\\" height=\\\"90\\\" src=\\\"\" + ___HTML_LOADER_IMPORT_1___ + \"\\\" alt=\\\"Contoso\\\" title=\\\"Contoso\\\"/> <h1 class=\\\"ms-font-su\\\">Welcome</h1> </header> <section id=\\\"sideload-msg\\\" class=\\\"ms-welcome__main\\\"> <h2 class=\\\"ms-font-xl\\\">Please <a target=\\\"_blank\\\" href=\\\"https://learn.microsoft.com/office/dev/add-ins/testing/test-debug-office-add-ins#sideload-an-office-add-in-for-testing\\\">sideload</a> your add-in to see app body.</h2> </section> <main id=\\\"app-body\\\" class=\\\"ms-welcome__main\\\" style=\\\"display:none\\\"> <h2 class=\\\"ms-font-xl\\\">Please select an operation:</h2> <div role=\\\"button\\\" id=\\\"encrypt\\\" class=\\\"ms-welcome__action ms-Button ms-Button--hero ms-font-xl\\\"> <span class=\\\"ms-Button-label\\\">Encrypt Selected Column</span> </div> <div role=\\\"button\\\" id=\\\"decrypt\\\" class=\\\"ms-welcome__action ms-Button ms-Button--hero ms-font-xl\\\"> <span class=\\\"ms-Button-label\\\">Decrypt Selected Column</span> </div> <p><label id=\\\"item-subject\\\"></label></p> </main> <dialog id=\\\"passwordDialog\\\"> <form method=\\\"dialog\\\"> <div> <label for=\\\"password\\\">Please enter password:</label> <input type=\\\"password\\\" id=\\\"password\\\" required> </div> <div> <button id=\\\"confirmPassword\\\">Confirm</button> <button id=\\\"cancelPassword\\\">Cancel</button> </div> </form> </dialog> </body> </html> \";\n// Exports\nexport default code;"],"names":["__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","d","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","b","baseURI","self","href","_regeneratorRuntime","t","r","n","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","encryptSelectedColumn","_encryptSelectedColumn","_callee4","_context4","Excel","run","_ref2","_callee3","context","range","_context3","workbook","getSelectedRange","load","sync","columnIndex","getElementById","showModal","_x4","t0","console","error","Office","ui","displayDialogAsync","concat","message","decryptSelectedColumn","_decryptSelectedColumn","_callee6","_context6","_ref3","_callee5","sheet","usedRange","wholeColumn","headerCell","headerText","headerColor","dialog","_context5","worksheets","getActiveWorksheet","getUsedRange","getRangeByIndexes","rowCount","getCell","format","log","fill","color","toLowerCase","height","width","dataset","action","_x5","_processEncryption","_callee8","password","errorMessage","_context8","_ref4","_callee7","dataToEncrypt","validDataRows","base64Password","authHeader","requestBody","apiUrl","startTime","controller","timeoutId","response","endTime","duration","errorText","encryptedData","titleCell","worksheet","entireRange","commentText","_context7","columnCount","map","row","filter","cell","index","rowIndex","item","btoa","data","JSON","stringify","Date","AbortController","setTimeout","abort","fetch","headers","body","signal","redirect","referrerPolicy","clearTimeout","status","statusText","fromEntries","ok","text","json","Array","isArray","protection","protected","unprotect","locked","protect","allowInsertRows","allowInsertColumns","allowDeleteRows","allowDeleteColumns","allowSort","allowFilter","allowEditObjects","allowEditScenarios","toLocaleString","comments","add","includes","_x6","stack","_processDecryption","_callee10","_context10","_ref5","_callee9","dataToDecrypt","decryptedData","_context9","clear","ClearApplyTo","_x7","onReady","info","host","HostType","style","display","encryptButton","decryptButton","onclick","confirmButton","cancelButton","_x2","processDecryption","_x","processEncryption","close","URL"],"sourceRoot":""}